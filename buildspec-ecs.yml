version: 0.2

phases:
  install:
    commands:
      - echo "Installing prerequisites..."
      - echo "Downloading .env from S3..."
      - aws s3 cp s3://thinktravel-variables/env .env
      - echo "Sourcing environment variables from .env..."
      - export $(grep -v '^#' .env | xargs)

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION_BD | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION_BD.amazonaws.com

  build:
    commands:
      - echo "Packaging Lambda function...."
      - cd back
      - echo "Using PHP version"
      - aws lambda invoke --function-name $Function --region us-east-2 --payload '{}' response.json
      - php -v
      - composer install
      - echo "Using PHP version after update"
      - php -v
      - composer --version
      - chmod -R 755 vendor
      - chmod -R 777 bootstrap/*
      - php artisan config:cache
      - php artisan config:clear
      - php artisan cache:clear
      - php artisan view:clear
      - php artisan optimize:clear
      # - php artisan migrate  # Uncomment if needed
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION_BD.amazonaws.com/$IMAGE_REPO_NAME
      - echo Build started on `date`
      - ls
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - cd ..
      - echo deploy started
      - ls
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
